{"ast":null,"code":"import _defineProperty from \"/Users/ri/new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from '../types';\nconst handlers = {\n  [SHOW_LOADER]: state => _objectSpread({}, state, {\n    loading: true\n  }),\n  [ADD_NOTE]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    notes: [...state.notes, payload]\n  }),\n  [FETCH_NOTES]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    notes: payload,\n    loading: false\n  }),\n  [REMOVE_NOTE]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    notes: state.notes.filter(note => note.id !== payload)\n  }),\n  DEFAULT: state => state\n};\nexport const firebaseReducer = (state, action) => {\n  const handle = handlers[action.type] || handlers.DEFAULT;\n  return handle(state, action);\n};","map":{"version":3,"sources":["/Users/ri/new/src/context/firebase/firebaseReducer.js"],"names":["ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","SHOW_LOADER","handlers","state","loading","payload","notes","filter","note","id","DEFAULT","firebaseReducer","action","handle","type"],"mappings":";;;;;;AACA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,WAA5C,QAA8D,UAA9D;AAEA,MAAMC,QAAQ,GAAG;AACf,GAACD,WAAD,GAAeE,KAAK,sBAASA,KAAT;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,IADL;AAEf,GAACN,QAAD,GAAY,CAACK,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,uBACPF,KADO;AAEVG,IAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBD,OAAjB;AAFG,IAFG;AAMf,GAACN,WAAD,GAAe,CAACI,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,uBAA2BF,KAA3B;AAAkCG,IAAAA,KAAK,EAAED,OAAzC;AAAkDD,IAAAA,OAAO,EAAE;AAA3D,IANA;AAOf,GAACJ,WAAD,GAAe,CAACG,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,uBACVF,KADU;AAEbG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAvC;AAFM,IAPA;AAWfK,EAAAA,OAAO,EAAEP,KAAK,IAAIA;AAXH,CAAjB;AAcA,OAAO,MAAMQ,eAAe,GAAG,CAACR,KAAD,EAAQS,MAAR,KAAmB;AAChD,QAAMC,MAAM,GAAGX,QAAQ,CAACU,MAAM,CAACE,IAAR,CAAR,IAAyBZ,QAAQ,CAACQ,OAAjD;AACA,SAAOG,MAAM,CAACV,KAAD,EAAQS,MAAR,CAAb;AACD,CAHM","sourcesContent":["  \nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from '../types'\n\nconst handlers = {\n  [SHOW_LOADER]: state => ({...state, loading: true}),\n  [ADD_NOTE]: (state, {payload}) => ({\n    ...state,\n    notes: [...state.notes, payload]\n  }),\n  [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\n  [REMOVE_NOTE]: (state, {payload}) => ({\n    ...state,\n    notes: state.notes.filter(note => note.id !== payload)\n  }),\n  DEFAULT: state => state\n}\n\nexport const firebaseReducer = (state, action) => {\n  const handle = handlers[action.type] || handlers.DEFAULT\n  return handle(state, action)\n}"]},"metadata":{},"sourceType":"module"}